{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { globalStyle } from \"../styles/style\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { EvilIcons } from '@expo/vector-icons';\nimport Form from \"./Form\";\nimport SelectedPartSymptoms from \"./SelectedPartSymptoms\";\nimport History from \"./History\";\nimport Svg, { Circle } from \"react-native-svg\";\nimport SvgComponent from \"./Svg\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Main(_ref) {\n  var navigation = _ref.navigation;\n\n  var loadScene = function loadScene() {\n    navigation.navigate('Contact');\n  };\n\n  var _useState = useState([{\n    date: '20.01.2022',\n    symptoms: 'Головний біль, Запаморочення, Випадіння волосся',\n    note: 'можливо зв\\'язане зі стресом',\n    key: '1'\n  }, {\n    date: '19.04.2022',\n    symptoms: 'Підвищення температури тіла, Випадіння волосся',\n    note: 'можливо зв\\'язане зі перевантаженням',\n    key: '2'\n  }, {\n    date: '13.02.2022',\n    symptoms: 'Набряклість лиця, Запаморочення',\n    note: 'можливо зв\\'язане зі перенесенням отьоку винки',\n    key: '3'\n  }]),\n      _useState2 = _slicedToArray(_useState, 2),\n      news = _useState2[0],\n      setNews = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      modalWindow = _useState4[0],\n      setModalWindow = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      modalWindow2 = _useState6[0],\n      setModalWindow2 = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      modalWindow3 = _useState8[0],\n      setModalWindow3 = _useState8[1];\n\n  var addSymptoms = function addSymptoms(article) {\n    article.key = Math.random().toString();\n    setNews(function (list) {\n      return [article].concat(_toConsumableArray(list));\n    });\n    setModalWindow2(false);\n    clearSymptoms();\n  };\n\n  var symptoms = [{\n    label: 'Головний біль',\n    value: 'Головний біль'\n  }, {\n    label: 'Запаморочення',\n    value: 'Запаморочення'\n  }, {\n    label: 'Тошнота',\n    value: 'Тошнота'\n  }, {\n    label: \"Порушення пам'яті\",\n    value: \"Порушення пам'яті\"\n  }, {\n    label: 'Підвищення температури тіла',\n    value: 'Підвищення температури тіла'\n  }, {\n    label: 'Випадіння волосся',\n    value: 'Випадіння волосся'\n  }, {\n    label: 'Лицьовий біль',\n    value: 'Лицьовий біль'\n  }, {\n    label: 'Слабкість лицьових м\\'яз',\n    value: 'Слабкість лицьових м\\'яз'\n  }, {\n    label: 'Зміна шкіри лиця',\n    value: 'Зміна шкіри лиця'\n  }, {\n    label: 'Оніміння лиця',\n    value: 'Оніміння лиця'\n  }, {\n    label: 'Набряклість лиця',\n    value: 'Набряклість лиця'\n  }];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      selectedSymptoms = _useState10[0],\n      setSelectedSymptoms = _useState10[1];\n\n  var onSelectionsChange = function onSelectionsChange(newSelections) {\n    setSelectedSymptoms(newSelections);\n  };\n\n  var clearSymptoms = function clearSymptoms() {\n    setSelectedSymptoms(function () {\n      return [];\n    });\n    setModalWindow2(false);\n  };\n\n  return _jsxs(View, {\n    style: globalStyle.main,\n    children: [_jsx(Modal, {\n      visible: modalWindow,\n      children: _jsxs(View, {\n        style: globalStyle.main,\n        children: [_jsx(Ionicons, {\n          name: \"close-circle\",\n          size: 26,\n          color: \"red\",\n          onPress: function onPress() {\n            return setModalWindow(false);\n          }\n        }), _jsx(Text, {\n          style: styles.title,\n          children: \"\\u0421\\u0438\\u043C\\u043F\\u0442\\u043E\\u043C\\u0438 \\u0434\\u043B\\u044F \\u0433\\u043E\\u043B\\u043E\\u0432\\u0438\"\n        }), _jsx(SelectedPartSymptoms, {\n          symptoms: symptoms,\n          selectedSymptoms: selectedSymptoms,\n          onSelectionsChange: onSelectionsChange\n        })]\n      })\n    }), _jsx(Modal, {\n      visible: modalWindow2,\n      children: _jsxs(View, {\n        style: globalStyle.main,\n        children: [_jsx(Ionicons, {\n          name: \"close-circle\",\n          size: 26,\n          color: \"red\",\n          onPress: function onPress() {\n            return setModalWindow2(false);\n          }\n        }), _jsx(Text, {\n          style: styles.title,\n          children: \"\\u0417\\u0431\\u0435\\u0440\\u0435\\u0436\\u0435\\u043D\\u043D\\u044F \\u0441\\u0438\\u043C\\u043F\\u0442\\u043E\\u043C\\u0456\\u0432\"\n        }), _jsx(Form, {\n          addSymptoms: addSymptoms,\n          selectedSymptoms: selectedSymptoms\n        })]\n      })\n    }), _jsx(Modal, {\n      visible: modalWindow3,\n      children: _jsxs(View, {\n        style: globalStyle.main,\n        children: [_jsx(Ionicons, {\n          name: \"close-circle\",\n          size: 26,\n          color: \"red\",\n          onPress: function onPress() {\n            return setModalWindow3(false);\n          }\n        }), _jsx(History, {\n          news: news\n        })]\n      })\n    }), _jsxs(View, {\n      style: styles.icons,\n      children: [_jsx(Ionicons, {\n        name: \"time-sharp\",\n        size: 34,\n        color: \"#2b59d6\",\n        style: styles.div,\n        onPress: function onPress() {\n          return setModalWindow3(true);\n        }\n      }), _jsx(EvilIcons, {\n        name: \"user\",\n        size: 40,\n        color: \"black\",\n        style: styles.div,\n        onPress: function onPress() {\n          return navigation.navigate('Profile');\n        }\n      })]\n    }), _jsx(View, {\n      style: styles.body,\n      children: _jsx(SvgComponent, {\n        onPress: function onPress() {\n          return setModalWindow(true);\n        }\n      })\n    }), _jsxs(View, {\n      children: [_jsx(FlatList, {\n        data: selectedSymptoms,\n        style: styles.flatList,\n        renderItem: function renderItem(_ref2) {\n          var item = _ref2.item;\n          return _jsx(View, {\n            children: _jsxs(Text, {\n              style: styles.flatListText,\n              children: [item.label, \", \"]\n            })\n          });\n        },\n        horizontal: true\n      }), _jsx(Ionicons, {\n        name: \"add-circle-sharp\",\n        size: 30,\n        color: \"green\",\n        style: {\n          alignSelf: 'center'\n        },\n        onPress: function onPress() {\n          return setModalWindow2(true);\n        }\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  icons: {\n    flex: 0.1,\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  body: {\n    flex: 1,\n    alignSelf: 'center',\n    width: '90%',\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  header: {\n    marginBottom: 5\n  },\n  flatList: {\n    height: 30,\n    backgroundColor: '#c3d3e0',\n    flexGrow: 0,\n    borderRadius: 4\n  },\n  flatListText: {\n    fontFamily: 'mt-light',\n    fontSize: 18\n  },\n  title: {\n    alignSelf: 'center',\n    fontFamily: 'mt-bold',\n    fontSize: 20\n  }\n});","map":{"version":3,"sources":["D:/_code/Symptoms/components/Main.js"],"names":["React","useState","globalStyle","Ionicons","EvilIcons","Form","SelectedPartSymptoms","History","Svg","Circle","SvgComponent","Main","navigation","loadScene","navigate","date","symptoms","note","key","news","setNews","modalWindow","setModalWindow","modalWindow2","setModalWindow2","modalWindow3","setModalWindow3","addSymptoms","article","Math","random","toString","list","clearSymptoms","label","value","selectedSymptoms","setSelectedSymptoms","onSelectionsChange","newSelections","main","styles","title","icons","div","body","flatList","item","flatListText","alignSelf","StyleSheet","create","flex","flexDirection","justifyContent","width","alignItems","header","marginBottom","height","backgroundColor","flexGrow","borderRadius","fontFamily","fontSize"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\r\nimport {Text, View, TouchableOpacity, FlatList, Image, Modal, Button,} from 'react-native';\r\nimport {globalStyle} from \"../styles/style\";\r\nimport { StyleSheet} from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { EvilIcons } from '@expo/vector-icons';\r\nimport Form from \"./Form\";\r\nimport SelectedPartSymptoms from \"./SelectedPartSymptoms\";\r\nimport History from \"./History\";\r\nimport Svg, {Circle} from \"react-native-svg\";\r\nimport SvgComponent from \"./Svg\";\r\n\r\n\r\nexport default function Main({navigation}) {\r\n const loadScene = ()=> {\r\n        navigation.navigate('Contact');\r\n    }\r\n    const [news, setNews] = useState([\r\n        {date:'20.01.2022', symptoms: 'Головний біль, Запаморочення, Випадіння волосся',\r\n            note: 'можливо зв\\'язане зі стресом', key:'1'},\r\n        {date:'19.04.2022', symptoms: 'Підвищення температури тіла, Випадіння волосся',\r\n            note: 'можливо зв\\'язане зі перевантаженням', key:'2'},\r\n        {date:'13.02.2022', symptoms: 'Набряклість лиця, Запаморочення',\r\n            note: 'можливо зв\\'язане зі перенесенням отьоку винки', key:'3'},\r\n    ]);\r\n\r\n\r\n    const [modalWindow, setModalWindow] = useState(false);\r\n    const [modalWindow2, setModalWindow2] = useState(false);\r\n    const [modalWindow3, setModalWindow3] = useState(false);\r\n\r\n    const addSymptoms = (article) => {\r\n        article.key=Math.random().toString();\r\n        setNews((list)=>{\r\n            return[\r\n                article,\r\n                ...list\r\n            ]\r\n        });\r\n        setModalWindow2(false);\r\n        clearSymptoms();\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    const symptoms = [\r\n        { label: 'Головний біль', value: 'Головний біль'},\r\n        { label: 'Запаморочення', value: 'Запаморочення'},\r\n        { label: 'Тошнота', value: 'Тошнота'},\r\n        { label: \"Порушення пам'яті\", value: \"Порушення пам'яті\" },\r\n        { label: 'Підвищення температури тіла', value: 'Підвищення температури тіла' },\r\n        { label: 'Випадіння волосся', value: 'Випадіння волосся'},\r\n        { label: 'Лицьовий біль', value: 'Лицьовий біль'},\r\n        { label: 'Слабкість лицьових м\\'яз', value: 'Слабкість лицьових м\\'яз' },\r\n        { label: 'Зміна шкіри лиця', value: 'Зміна шкіри лиця'},\r\n        { label: 'Оніміння лиця', value: 'Оніміння лиця'},\r\n        { label: 'Набряклість лиця', value: 'Набряклість лиця'},\r\n    ]\r\n\r\n\r\n    const [selectedSymptoms, setSelectedSymptoms] = useState([]);\r\n\r\n    const onSelectionsChange = newSelections => {\r\n        setSelectedSymptoms(newSelections);\r\n    }\r\n\r\n    const clearSymptoms = () => {\r\n        setSelectedSymptoms(() => {\r\n            return []\r\n        });\r\n        setModalWindow2(false);\r\n    }\r\n\r\n    return (\r\n        <View style={globalStyle.main}>\r\n            <Modal visible={modalWindow}>\r\n                <View style={globalStyle.main}>\r\n                    <Ionicons name=\"close-circle\" size={26} color=\"red\" onPress={()=>setModalWindow(false)}/>\r\n                    <Text style={styles.title}>Симптоми для голови</Text>\r\n                    <SelectedPartSymptoms  symptoms={symptoms} selectedSymptoms={selectedSymptoms} onSelectionsChange={onSelectionsChange}/>\r\n                </View>\r\n            </Modal>\r\n\r\n            <Modal visible={modalWindow2}>\r\n                <View style={globalStyle.main}>\r\n                    <Ionicons name=\"close-circle\" size={26} color=\"red\" onPress={()=>setModalWindow2(false)}/>\r\n                    <Text style={styles.title}>Збереження симптомів</Text>\r\n                    <Form addSymptoms={addSymptoms} selectedSymptoms={selectedSymptoms}/>\r\n                </View>\r\n            </Modal>\r\n\r\n            <Modal visible={modalWindow3}>\r\n                <View style={globalStyle.main}>\r\n                    <Ionicons name=\"close-circle\" size={26} color=\"red\" onPress={()=>setModalWindow3(false)}/>\r\n                    <History news={news}/>\r\n                </View>\r\n            </Modal>\r\n\r\n\r\n            <View style={styles.icons}>\r\n                <Ionicons name=\"time-sharp\" size={34} color=\"#2b59d6\" style={styles.div}  onPress={()=>setModalWindow3(true)}/>\r\n                <EvilIcons name=\"user\" size={40} color=\"black\" style={styles.div} onPress={()=> navigation.navigate('Profile')}/>\r\n            </View>\r\n\r\n            <View style={styles.body}>\r\n                <SvgComponent  onPress={()=>setModalWindow(true)}/>\r\n            </View>\r\n\r\n\r\n\r\n            <View>\r\n                <FlatList data={selectedSymptoms} style={styles.flatList} renderItem={({item})=> (\r\n                    <View>\r\n                        <Text  style={styles.flatListText}>{item.label}, </Text>\r\n                    </View>\r\n\r\n                )}\r\n                 horizontal\r\n                />\r\n                <Ionicons name=\"add-circle-sharp\" size={30} color=\"green\" style={{ alignSelf:'center'}}  onPress={()=>setModalWindow2(true)}/>\r\n\r\n            </View>\r\n\r\n        </View>\r\n    );\r\n\r\n}\r\nconst styles = StyleSheet.create({\r\n    icons:\r\n        {\r\n            flex: 0.1,\r\n            flexDirection: 'row',\r\n            justifyContent: 'space-between',\r\n        },\r\n    body:\r\n        {\r\n            flex: 1,\r\n            alignSelf: 'center',\r\n            width: '90%',\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n\r\n        },\r\n\r\n\r\n    header: {\r\n        marginBottom: 5\r\n    },\r\n    flatList: {\r\n        height: 30,\r\n        backgroundColor: '#c3d3e0',\r\n        flexGrow: 0,\r\n        borderRadius:4\r\n\r\n    },\r\n    flatListText:\r\n        {\r\n            fontFamily:'mt-light',\r\n            fontSize: 18,\r\n\r\n        },\r\n    title:\r\n        {\r\n            alignSelf: 'center',\r\n            fontFamily: 'mt-bold',\r\n            fontSize:20\r\n        }\r\n\r\n});\r\n\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { globalStyle } from \"../styles/style\";\nimport { FontAwesome } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Profile(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var getUser = function getUser() {\n    fetch('http://localhost:8080/user/getUserInfo', {\n      method: 'GET',\n      credentials: 'include',\n      cache: 'no-cache'\n    }).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      setUser(data);\n    });\n  };\n\n  return _jsxs(View, {\n    style: globalStyle.main,\n    children: [_jsxs(Text, {\n      style: styles.full,\n      children: [_jsx(Text, {\n        style: styles.labelText,\n        children: \"\\u0406\\u043C'\\u044F:\"\n      }), _jsx(Text, {\n        children: user.username\n      })]\n    }), _jsxs(Text, {\n      style: styles.full,\n      children: [_jsx(Text, {\n        style: styles.labelText,\n        children: \"\\u041F\\u0440\\u0456\\u0437\\u0432\\u0438\\u0449\\u0435:\"\n      }), _jsx(Text, {\n        children: \" \\u041A\\u043E\\u0441\"\n      })]\n    }), _jsxs(Text, {\n      style: styles.full,\n      children: [_jsx(Text, {\n        style: styles.labelText,\n        children: \"\\u041F\\u043E\\u0448\\u0442\\u0430:\"\n      }), _jsx(Text, {\n        children: \" v@gmail.com\"\n      })]\n    }), _jsx(FontAwesome, {\n      style: {\n        alignSelf: 'center',\n        margin: 5\n      },\n      name: \"sign-out\",\n      size: 30,\n      color: \"#1847c7\",\n      onPress: function onPress() {\n        return navigation.navigate('Login');\n      }\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  full: {\n    fontFamily: 'mt-light',\n    fontSize: 18,\n    margin: 5,\n    color: '#474747'\n  },\n  labelText: {\n    fontFamily: 'mt-bold'\n  }\n});","map":{"version":3,"sources":["D:/_code/Symptoms/components/Profile.js"],"names":["React","useState","globalStyle","FontAwesome","Profile","navigation","user","setUser","getUser","fetch","method","credentials","cache","then","response","json","data","main","styles","full","labelText","username","alignSelf","margin","navigate","StyleSheet","create","fontFamily","fontSize","color"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;;;;AAEA,SAAQC,WAAR;AACA,SAASC,WAAT,QAA4B,oBAA5B;;;AAEA,eAAe,SAASC,OAAT,OAA+B;AAAA,MAAbC,UAAa,QAAbA,UAAa;;AAE1C,kBAAwBJ,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOK,IAAP;AAAA,MAAaC,OAAb;;AAGA,MAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAClBC,IAAAA,KAAK,CAAC,wCAAD,EAA2C;AAC5CC,MAAAA,MAAM,EAAE,KADoC;AAE5CC,MAAAA,WAAW,EAAE,SAF+B;AAG5CC,MAAAA,KAAK,EAAE;AAHqC,KAA3C,CAAL,CAKKC,IALL,CAKU,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,KALlB,EAMKF,IANL,CAMU,UAAAG,IAAI,EAAI;AACVT,MAAAA,OAAO,CAACS,IAAD,CAAP;AACH,KARL;AAWH,GAZD;;AAcA,SACI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEd,WAAW,CAACe,IAAzB;AAAA,eACI,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEC,MAAM,CAACC,IAApB;AAAA,iBACI,KAAC,IAAD;AAAM,QAAA,KAAK,EAAED,MAAM,CAACE,SAApB;AAAA;AAAA,QADJ,EAEI,KAAC,IAAD;AAAA,kBAAOd,IAAI,CAACe;AAAZ,QAFJ;AAAA,MADJ,EAKI,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEH,MAAM,CAACC,IAApB;AAAA,iBACI,KAAC,IAAD;AAAM,QAAA,KAAK,EAAED,MAAM,CAACE,SAApB;AAAA;AAAA,QADJ,EAEI,KAAC,IAAD;AAAA;AAAA,QAFJ;AAAA,MALJ,EASI,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEF,MAAM,CAACC,IAApB;AAAA,iBACI,KAAC,IAAD;AAAM,QAAA,KAAK,EAAED,MAAM,CAACE,SAApB;AAAA;AAAA,QADJ,EAEI,KAAC,IAAD;AAAA;AAAA,QAFJ;AAAA,MATJ,EAcI,KAAC,WAAD;AAAa,MAAA,KAAK,EAAE;AAACE,QAAAA,SAAS,EAAC,QAAX;AAAqBC,QAAAA,MAAM,EAAC;AAA5B,OAApB;AAAoD,MAAA,IAAI,EAAC,UAAzD;AAAoE,MAAA,IAAI,EAAE,EAA1E;AAA8E,MAAA,KAAK,EAAC,SAApF;AAA8F,MAAA,OAAO,EAAE;AAAA,eAAKlB,UAAU,CAACmB,QAAX,CAAoB,OAApB,CAAL;AAAA;AAAvG,MAdJ;AAAA,IADJ;AAmBH;AAED,IAAMN,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC7BP,EAAAA,IAAI,EAAC;AACDQ,IAAAA,UAAU,EAAC,UADV;AAEDC,IAAAA,QAAQ,EAAE,EAFT;AAGDL,IAAAA,MAAM,EAAE,CAHP;AAIDM,IAAAA,KAAK,EAAC;AAJL,GADwB;AAO7BT,EAAAA,SAAS,EAAE;AACPO,IAAAA,UAAU,EAAC;AADJ;AAPkB,CAAlB,CAAf","sourcesContent":["import React, {useState} from \"react\";\r\nimport {Button, Image, StyleSheet, Text, View} from 'react-native';\r\nimport {globalStyle} from \"../styles/style\";\r\nimport { FontAwesome } from '@expo/vector-icons';\r\n\r\nexport default function Profile({navigation}) {\r\n\r\n    const [user, setUser] = useState([]);\r\n\r\n\r\n    const getUser = () => {\r\n        fetch('http://localhost:8080/user/getUserInfo', {\r\n            method: 'GET',\r\n            credentials: 'include',\r\n            cache: 'no-cache',\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setUser(data)\r\n            })\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <View style={globalStyle.main}>\r\n            <Text style={styles.full}>\r\n                <Text style={styles.labelText}>Ім'я:</Text>\r\n                <Text>{user.username}</Text>\r\n            </Text>\r\n            <Text style={styles.full}>\r\n                <Text style={styles.labelText}>Прізвище:</Text>\r\n                <Text> Кос</Text>\r\n            </Text>\r\n            <Text style={styles.full}>\r\n                <Text style={styles.labelText}>Пошта:</Text>\r\n                <Text> v@gmail.com</Text>\r\n            </Text>\r\n\r\n            <FontAwesome style={{alignSelf:'center', margin:5}} name=\"sign-out\" size={30} color=\"#1847c7\" onPress={()=> navigation.navigate('Login')}/>\r\n\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    full:{\r\n        fontFamily:'mt-light',\r\n        fontSize: 18,\r\n        margin: 5,\r\n        color:'#474747'\r\n    },\r\n    labelText: {\r\n        fontFamily:'mt-bold',\r\n\r\n    },\r\n\r\n});\r\n\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import React from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { globalStyle } from \"../styles/style\";\nimport { Formik } from \"formik\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Form(_ref) {\n  var addSymptoms = _ref.addSymptoms,\n      selectedSymptoms = _ref.selectedSymptoms;\n  var names = selectedSymptoms.map(function (item) {\n    return item['value'];\n  });\n\n  var formatDate = function formatDate(d) {\n    var mm = d.getMonth() + 1;\n    var dd = d.getDate();\n    return [(dd > 9 ? '' : '0') + dd, (mm > 9 ? '' : '0') + mm, d.getFullYear()].join('.');\n  };\n\n  var date1 = formatDate(new Date());\n  return _jsx(View, {\n    children: _jsx(Formik, {\n      initialValues: {\n        symptoms: names.join(', '),\n        date: date1,\n        note: ''\n      },\n      onSubmit: function onSubmit(values, action) {\n        addSymptoms(values);\n        action.resetForm();\n      },\n      children: function children(props) {\n        return _jsxs(View, {\n          children: [_jsx(TextInput, {\n            style: styles.input,\n            value: props.values.symptoms,\n            placeholder: 'Симптоми',\n            placeholderTextColor: 'silver',\n            editable: false,\n            onChangeText: props.handleChange('symptoms')\n          }), _jsx(TextInput, {\n            style: styles.input,\n            value: props.values.date,\n            placeholder: 'Дата',\n            placeholderTextColor: 'silver',\n            editable: false,\n            onChangeText: props.handleChange('date')\n          }), _jsx(TextInput, {\n            style: styles.forNotes,\n            value: props.values.note,\n            multiline: true,\n            placeholder: 'Нотатки',\n            placeholderTextColor: 'silver',\n            onChangeText: props.handleChange('note')\n          }), _jsx(Button, {\n            title: 'Add',\n            onPress: props.handleSubmit\n          })]\n        });\n      }\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  input: {\n    borderWidth: 2,\n    marginTop: 15,\n    padding: 10,\n    borderColor: 'silver',\n    borderRadius: 5\n  },\n  forNotes: {\n    borderWidth: 2,\n    marginTop: 15,\n    padding: 10,\n    borderColor: 'silver',\n    borderRadius: 5,\n    paddingBottom: 150\n  }\n});","map":{"version":3,"sources":["D:/_code/Symptoms/components/Form.js"],"names":["React","globalStyle","Formik","Form","addSymptoms","selectedSymptoms","names","map","item","formatDate","d","mm","getMonth","dd","getDate","getFullYear","join","date1","Date","symptoms","date","note","values","action","resetForm","props","styles","input","handleChange","forNotes","handleSubmit","StyleSheet","create","borderWidth","marginTop","padding","borderColor","borderRadius","paddingBottom"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {Button, Image, StyleSheet, TextInput, View} from 'react-native';\r\nimport {globalStyle} from \"../styles/style\";\r\nimport {Formik} from \"formik\";\r\nimport {SafeAreaView} from \"react-native-web\";\r\n\r\n\r\nexport default function Form({addSymptoms, selectedSymptoms}) {\r\n    const names = selectedSymptoms.map(function(item) {\r\n        return item['value'];\r\n    });\r\n\r\n    const formatDate = (d) => {\r\n        var mm = d.getMonth() + 1; // getMonth() is zero-based\r\n        var dd = d.getDate();\r\n        return [\r\n            (dd>9 ? '' : '0') + dd,\r\n            (mm>9 ? '' : '0') + mm,\r\n            d.getFullYear()\r\n        ].join('.');\r\n    }\r\n\r\n    const date1 = formatDate(new Date());\r\n\r\n\r\n    return (\r\n        <View>\r\n            <Formik initialValues={{symptoms: names.join(', '), date: date1, note: ''}} onSubmit={(values, action) => {\r\n                addSymptoms(values);\r\n                action.resetForm();\r\n            }}>\r\n                {(props) => (\r\n                    <View>\r\n                        <TextInput\r\n                            style={styles.input}\r\n                            value={props.values.symptoms}\r\n                            placeholder={'Симптоми'}\r\n                            placeholderTextColor={'silver'}\r\n                            editable = {false}\r\n                            onChangeText={props.handleChange('symptoms')}/>\r\n                        <TextInput\r\n                            style={styles.input}\r\n                            value={props.values.date}\r\n                            placeholder={'Дата'}\r\n                            placeholderTextColor={'silver'}\r\n                            editable = {false}\r\n                            onChangeText={props.handleChange('date')}/>\r\n                        <TextInput\r\n                            style={styles.forNotes}\r\n                            value={props.values.note}\r\n                            multiline\r\n                            placeholder={'Нотатки'}\r\n                            placeholderTextColor={'silver'}\r\n                            onChangeText={props.handleChange('note')}/>\r\n\r\n\r\n                        <Button title={'Add'} onPress={props.handleSubmit}/>\r\n                    </View>\r\n                )}\r\n            </Formik>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    input:\r\n        {\r\n            borderWidth: 2,\r\n            marginTop: 15,\r\n            padding: 10,\r\n            borderColor: 'silver',\r\n            borderRadius: 5,\r\n\r\n        },\r\n\r\n    forNotes:\r\n        {\r\n            borderWidth: 2,\r\n            marginTop: 15,\r\n            padding: 10,\r\n            borderColor: 'silver',\r\n            borderRadius: 5,\r\n            paddingBottom:150\r\n\r\n        }\r\n});\r\n\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Login = function (_React$Component) {\n  _inherits(Login, _React$Component);\n\n  var _super = _createSuper(Login);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      username: null,\n      password: null\n    };\n    _this.login = _this.login.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"login\",\n    value: function login(event) {\n      var _this2 = this;\n\n      var formData;\n      return _regeneratorRuntime.async(function login$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              formData = new FormData();\n              formData.append('username', this.state.username);\n              formData.append('password', this.state.password);\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(fetch('http://localhost:8080/login', {\n                method: 'POST',\n                body: formData,\n                credentials: 'include',\n                cache: 'no-cache'\n              }).then(function (response) {\n                if (response.status === 200) {\n                  _this2.props.loginAction(true);\n\n                  _this2.props.reload();\n                } else {\n                  alert(\"Не вірно введені дані\");\n                }\n              }));\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return _jsx(View, {\n        style: styles.formWrapper,\n        children: _jsxs(View, {\n          style: styles.form,\n          children: [_jsx(TextInput, {\n            onChangeText: function onChangeText(username) {\n              return _this3.setState({\n                username: username\n              });\n            },\n            style: styles.input,\n            placeholder: \"E-mail\"\n          }), _jsx(TextInput, {\n            onChangeText: function onChangeText(password) {\n              return _this3.setState({\n                password: password\n              });\n            },\n            style: styles.input,\n            placeholder: \"Password\"\n          }), _jsx(Button, {\n            title: \"\\u0412\\u0445\\u0456\\u0434\",\n            color: \"green\",\n            onPress: this.login\n          })]\n        })\n      });\n    }\n  }]);\n\n  return Login;\n}(React.Component);\n\nexport default Login;\nvar styles = StyleSheet.create({\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10,\n    borderColor: \"transparent\",\n    shadowColor: \"rgba(0, 0, 0, 0.4)\",\n    shadowOffset: {\n      width: 0,\n      height: 0\n    },\n    shadowOpacity: 0.5,\n    shadowRadius: 4,\n    borderRadius: 4\n  },\n  formWrapper: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 20\n  },\n  form: {\n    width: 300,\n    backgroundColor: 'white',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 7,\n    shadowColor: \"rgba(0, 0, 0, 0.4)\",\n    shadowOffset: {\n      width: 1,\n      height: 1\n    },\n    shadowOpacity: 0.2,\n    shadowRadius: 4,\n    borderRadius: 4\n  }\n});","map":{"version":3,"sources":["D:/_code/Symptoms/components/Login.js"],"names":["React","Login","props","state","username","password","login","bind","event","formData","FormData","append","fetch","method","body","credentials","cache","then","response","status","loginAction","reload","alert","styles","formWrapper","form","setState","input","Component","StyleSheet","create","height","margin","borderWidth","padding","borderColor","shadowColor","shadowOffset","width","shadowOpacity","shadowRadius","borderRadius","justifyContent","alignItems","marginTop","backgroundColor"],"mappings":"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","sourcesContent":["/*import React from \"react\";\r\nimport {Button, Image, StyleSheet, TextInput, View} from 'react-native';\r\nimport {globalStyle} from \"../styles/style\";\r\nimport {Formik} from \"formik\";\r\nimport { AntDesign } from '@expo/vector-icons';\r\n\r\n\r\nexport default function Login({navigation, addArticle}) {\r\n    return (\r\n        <View>\r\n            <Formik initialValues={{login: '', password: ''}} onSubmit={(values, action) => {\r\n                //addArticle(values);\r\n                action.resetForm();\r\n            }}>\r\n                {(props) => (\r\n                    <View>\r\n                        <TextInput\r\n                            style={styles.input}\r\n                            value={props.values.login}\r\n                            placeholder={'Введіть логін'}\r\n                            placeholderTextColor={'silver'}\r\n                            onChangeText={props.handleChange('login')}/>\r\n                        <TextInput\r\n                            style={styles.input}\r\n                            value={props.values.password}\r\n                            placeholder={'Введіть пароль'}\r\n                            placeholderTextColor={'silver'}\r\n                            onChangeText={props.handleChange('password')}\r\n                            secureTextEntry={true}/>\r\n\r\n                        <AntDesign name=\"login\" style={{alignSelf:'center', margin:10}} size={30} color=\"#1847c7\" onPress={()=> navigation.navigate('Main')}/>\r\n                    </View>\r\n                )}\r\n            </Formik>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    input:\r\n        {\r\n            borderWidth: 2,\r\n            marginTop: 15,\r\n            padding: 10,\r\n            borderColor: 'silver',\r\n            borderRadius: 5,\r\n            marginLeft: 5,\r\n            marginRight: 5,\r\n        }\r\n});\r\n*/\r\n\r\nimport React from \"react\";\r\nimport {StyleSheet, View, Text, Button, TextInput} from \"react-native\";\r\n\r\nclass Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: null,\r\n            password: null\r\n        }\r\n        this.login = this.login.bind(this)\r\n    }\r\n\r\n    async login(event) {\r\n        const formData = new FormData();\r\n        formData.append('username', this.state.username);\r\n        formData.append('password', this.state.password);\r\n\r\n        await fetch('http://localhost:8080/login', {\r\n            method: 'POST',\r\n            body: formData,\r\n            credentials: 'include',\r\n            cache: 'no-cache',\r\n        }).then(response => {\r\n            if (response.status === 200) {\r\n                this.props.loginAction(true);\r\n                this.props.reload();\r\n            }\r\n            else {\r\n                alert(\"Не вірно введені дані\");\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <View style={styles.formWrapper}>\r\n                <View style={styles.form}>\r\n                    <TextInput onChangeText={(username) => this.setState({username: username})} style={styles.input} placeholder={\"E-mail\"}/>\r\n                    <TextInput onChangeText={(password) => this.setState({password: password})} style={styles.input} placeholder={\"Password\"}/>\r\n                    <Button title=\"Вхід\" color=\"green\" onPress={this.login}/>\r\n                </View>\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login\r\n\r\nconst styles = StyleSheet.create({\r\n    input: {\r\n        height: 40,\r\n        margin: 12,\r\n        borderWidth: 1,\r\n        padding: 10,\r\n        borderColor: \"transparent\",\r\n        shadowColor: \"rgba(0, 0, 0, 0.4)\",\r\n        shadowOffset: {width: 0, height: 0},\r\n        shadowOpacity: 0.5,\r\n        shadowRadius: 4,\r\n        borderRadius: 4\r\n    },\r\n    formWrapper: {\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        marginTop: 20\r\n    },\r\n    form: {\r\n        width: 300,\r\n        backgroundColor: 'white',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        padding: 7,\r\n        shadowColor: \"rgba(0, 0, 0, 0.4)\",\r\n        shadowOffset: {width: 1, height: 1},\r\n        shadowOpacity: 0.2,\r\n        shadowRadius: 4,\r\n        borderRadius: 4\r\n    }\r\n});\r\n\r\n"]},"metadata":{},"sourceType":"module"}
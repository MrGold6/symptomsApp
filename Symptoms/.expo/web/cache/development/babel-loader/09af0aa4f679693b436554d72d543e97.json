{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from \"react\";\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { globalStyle } from \"./styles/style\";\nimport * as Font from 'expo-font';\nimport { useState } from \"react\";\nimport AppLoading from 'expo-app-loading';\nimport MainStack from \"./navigate\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar fonts = function fonts() {\n  return Font.loadAsync({\n    'mt-bold': require(\"./assets/fonts/Montserrat-Bold.ttf\"),\n    'mt-light': require(\"./assets/fonts/Montserrat-Light.ttf\"),\n    'mt-ital': require(\"./assets/fonts/Montserrat-Italic-VariableFont_wght.ttf\")\n  });\n};\n\nexport default function App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      font = _useState2[0],\n      setFont = _useState2[1];\n\n  if (font) {\n    return _jsx(MainStack, {});\n  } else {\n    return _jsx(AppLoading, {\n      startAsync: fonts,\n      onFinish: function onFinish() {\n        return setFont(true);\n      },\n      onError: console.warn\n    });\n  }\n}\nvar styles = StyleSheet.create({\n  container: {}\n});","map":{"version":3,"sources":["D:/_code/Symptoms/App.js"],"names":["React","StatusBar","globalStyle","Font","useState","AppLoading","MainStack","fonts","loadAsync","require","App","font","setFont","console","warn","styles","StyleSheet","create","container"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,iBAA1B;;;AAEA,SAAQC,WAAR;AACA,OAAQ,KAAKC,IAAb,MAAuB,WAAvB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,SAAP;;;AAGA,IAAOC,KAAK,GAAG,SAARA,KAAQ;AAAA,SAAKJ,IAAI,CAACK,SAAL,CAAe;AAC7B,eAAWC,OAAO,sCADW;AAE7B,gBAAYA,OAAO,uCAFU;AAG7B,eAAWA,OAAO;AAHW,GAAf,CAAL;AAAA,CAAf;;AAMA,eAAe,SAASC,GAAT,GAAe;AAC5B,kBAAwBN,QAAQ,CAAC,KAAD,CAAhC;AAAA;AAAA,MAAOO,IAAP;AAAA,MAAaC,OAAb;;AACA,MAAGD,IAAH,EAAS;AACP,WACQ,KAAC,SAAD,KADR;AAGD,GAJD,MAKI;AACF,WACI,KAAC,UAAD;AAAY,MAAA,UAAU,EAAEJ,KAAxB;AACY,MAAA,QAAQ,EAAE;AAAA,eAAIK,OAAO,CAAC,IAAD,CAAX;AAAA,OADtB;AAEY,MAAA,OAAO,EAAEC,OAAO,CAACC;AAF7B,MADJ;AAKD;AACF;AAED,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AADoB,CAAlB,CAAf","sourcesContent":["import React from \"react\";\nimport { StatusBar } from 'expo-status-bar';\nimport {StyleSheet, View} from 'react-native';\nimport {globalStyle} from \"./styles/style\";\nimport  * as Font from 'expo-font';\nimport {useState} from \"react\";\nimport AppLoading from 'expo-app-loading';\nimport MainStack from \"./navigate\";\n\n\nconst  fonts = () =>Font.loadAsync({\n      'mt-bold': require('./assets/fonts/Montserrat-Bold.ttf'),\n      'mt-light': require('./assets/fonts/Montserrat-Light.ttf'),\n      'mt-ital': require('./assets/fonts/Montserrat-Italic-VariableFont_wght.ttf')\n    });\n\nexport default function App() {\n  const [font, setFont] = useState(false);\n  if(font) {\n    return (\n            <MainStack />\n    );\n  }\n  else{\n    return (\n        <AppLoading startAsync={fonts}\n                    onFinish={()=>setFont(true)}\n                    onError={console.warn}/>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n\n  },\n});\n"]},"metadata":{},"sourceType":"module"}
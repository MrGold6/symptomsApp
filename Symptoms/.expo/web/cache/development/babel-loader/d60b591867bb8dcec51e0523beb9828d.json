{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"style\", \"numeric\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"../Typography/Text\";\nimport TouchableRipple from \"../TouchableRipple/TouchableRipple\";\n\nvar DataTableCell = function DataTableCell(_ref) {\n  var children = _ref.children,\n      style = _ref.style,\n      numeric = _ref.numeric,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  return React.createElement(TouchableRipple, _extends({}, rest, {\n    style: [styles.container, numeric && styles.right, style]\n  }), React.createElement(Text, {\n    numberOfLines: 1\n  }, children));\n};\n\nDataTableCell.displayName = 'DataTable.Cell';\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  right: {\n    justifyContent: 'flex-end'\n  }\n});\nexport default DataTableCell;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;AAEA,OAAOC,IAAP;AACA,OAAOC,eAAP;;AAkDA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB;AAAA,MAAGC,QAAH,QAAGA,QAAH;AAAA,MAAaC,KAAb,QAAaA,KAAb;AAAA,MAAoBC,OAApB,QAAoBA,OAApB;AAAA,MAAgCC,IAAhC;;AAAA,SACpBP,oBAACE,eAAD,eACMK,IADN;AAEEF,SAAK,EAAE,CAACG,MAAM,CAACC,SAAR,EAAmBH,OAAO,IAAIE,MAAM,CAACE,KAArC,EAA4CL,KAA5C;AAFT,MAIEL,oBAACC,IAAD;AAAMU,iBAAa,EAAE;AAArB,KAAyBP,QAAzB,CAJF,CADoB;AAAA,CAAtB;;AASAD,aAAa,CAACS,WAAdT,GAA4B,gBAA5BA;AAEA,IAAMK,MAAM,GAAGK,UAAU,CAACC,MAAXD,CAAkB;AAC/BJ,WAAS,EAAE;AACTM,QAAI,EAAE,CADG;AAETC,iBAAa,EAAE,KAFN;AAGTC,cAAU,EAAE;AAHH,GADoB;AAO/BP,OAAK,EAAE;AACLQ,kBAAc,EAAE;AADX;AAPwB,CAAlBL,CAAf;AAYA,eAAeV,aAAf","names":["React","Text","TouchableRipple","DataTableCell","children","style","numeric","rest","styles","container","right","numberOfLines","displayName","StyleSheet","create","flex","flexDirection","alignItems","justifyContent"],"sources":["DataTableCell.tsx"],"sourcesContent":["import * as React from 'react';\nimport { StyleSheet, StyleProp, ViewStyle } from 'react-native';\nimport Text from '../Typography/Text';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport type { $RemoveChildren } from '../../types';\n\ntype Props = $RemoveChildren<typeof TouchableRipple> & {\n  /**\n   * Content of the `DataTableCell`.\n   */\n  children: React.ReactNode;\n  /**\n   * Align the text to the right. Generally monetary or number fields are aligned to right.\n   */\n  numeric?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n};\n\n/**\n * A component to show a single cell inside of a table.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/data-table-row-cell.png\" />\n *   </figure>\n * </div>\n *\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *      <DataTable.Row>\n *        <DataTable.Cell numeric>1</DataTable.Cell>\n *        <DataTable.Cell numeric>2</DataTable.Cell>\n *        <DataTable.Cell numeric>3</DataTable.Cell>\n *        <DataTable.Cell numeric>4</DataTable.Cell>\n *      </DataTable.Row>\n * );\n *\n * export default MyComponent;\n * ```\n *\n * If you want to support multiline text, please use View instead, as multiline text doesn't comply with\n * MD Guidelines (https://github.com/callstack/react-native-paper/issues/2381).\n */\n\nconst DataTableCell = ({ children, style, numeric, ...rest }: Props) => (\n  <TouchableRipple\n    {...rest}\n    style={[styles.container, numeric && styles.right, style]}\n  >\n    <Text numberOfLines={1}>{children}</Text>\n  </TouchableRipple>\n);\n\nDataTableCell.displayName = 'DataTable.Cell';\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n\n  right: {\n    justifyContent: 'flex-end',\n  },\n});\n\nexport default DataTableCell;\n"]},"metadata":{},"sourceType":"module"}